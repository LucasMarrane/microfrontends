// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../zustand
//   ../zustand/middleware

declare module '@lms/uteis' {
    export * from "@lms/uteis/uteis/export";
}

declare module '@lms/uteis/uteis/export' {
    export * from "@lms/uteis/uteis/ImportMicrofrontEndRuntime";
    export * from "@lms/uteis/uteis/store";
    export * from "@lms/uteis/uteis/criarChildMFE";
}

declare module '@lms/uteis/uteis/ImportMicrofrontEndRuntime' {
    export type TMicrofrontends = 'todo-todo';
    export const ImportMicrofrontEndRuntime: <T extends unknown>(microfrontends: TMicrofrontends) => Promise<T>;
}

declare module '@lms/uteis/uteis/store' {
    import { StateCreator, StoreApi } from 'zustand';
    import { PersistStorage } from 'zustand/middleware';
    export const storageB64: (storage?: any) => Storage;
    type TStoreFactoryConfig = {
        name: string;
        storage?: PersistStorage<Storage>;
        base64?: boolean;
    };
    export function storeFactory<T extends {}>(callback: StateCreator<T>, config?: TStoreFactoryConfig): StoreApi<T>;
    export function useStoreReact<T extends {}>(store: any): import("zustand").UseBoundStore<StoreApi<T>>;
    export interface IUsuario {
        nome: string;
        modulos: any[];
    }
    type TUsuarioStore = {
        usuario: IUsuario;
        setUsuario: (usuario?: IUsuario) => any;
    };
    export const usuarioStore: StoreApi<TUsuarioStore>;
    export {};
}

declare module '@lms/uteis/uteis/criarChildMFE' {
    export function criarChildMFE(elemento: any, elementoPai?: string): () => HTMLElement;
}

